import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp

# Parameters
m = 1.0  # mass
c = 0.5  # damping coefficient
k = 2.0  # spring constant
F = lambda t: np.sin(t)  # external force

# Differential equation
def mass_spring_damper(t, y):
    x, v = y
    dxdt = v
    dvdt = (F(t) - c*v - k*x) / m
    return [dxdt, dvdt]

# Initial conditions
x0 = 0.0  # initial displacement
v0 = 0.0  # initial velocity
y0 = [x0, v0]

# Time span
t_span = (0, 10)
t_eval = np.linspace(t_span[0], t_span[1], 300)

# Solve the differential equation
solution = solve_ivp(mass_spring_damper, t_span, y0, t_eval=t_eval)

# Extract results
t = solution.t
x = solution.y[0]

# Plot the solution
plt.figure(figsize=(10, 6))
plt.plot(t, x, label='Displacement (x)')
plt.xlabel('Time (s)')
plt.ylabel('Displacement (m)')
plt.title('Mass-Spring-Damper System Response')
plt.legend()
plt.grid()
plt.show()
